(mod ((GRANDPARENT_VALIDATION_PUZZLE_HASH PARENT_VALIDATION_PUZZLE_HASH MOVE SPLIT AMOUNT 
        TIMEOUT ACCUSED_PUZZLE_HASH ACCUSER_PUZZLE_HASH) . args)
    ; Handles the state where one player has accused the other of cheating and now either the accused 
    ; will defend their move successfully and get everything or the accuser will get everything
    ; GRANDPARENT_VALIDATION_PUZZLE_HASH is what's going to adjudicate
    ; PARENT_VALIDATION_PUZZLE_HASH MOVE and SPLIT were all accepted optimistically and need to be justified
    ; AMOUNT and TIMEOUT are inherited from the referree
    ; ACCUSED_PUZZLE_HASH and ACCUSER_PUZZLE_HASH are only used for rewards targets, validating 
    ; move defense and a timeout stand on their own
    ; ACCUSED should be renamed to DEFENDER to not look so similar to ACCUSER
    ; The type of args is either defend and a justification or timeout

    (include *standard-cl-22*)
    (include assert.clinc)
    (include condition_codes.clinc)
    (include curry.clinc)
    (include shatree.clinc)
    (include reduce.clinc)
    (include prefix.clinc)
    (defconstant timeout 0)
    (defconstant defend 1)

    (if args
        ; defend
        (assign (GRANDPARENT_VALIDATION_PUZZLE justification) args
            (assert (= (shatree GRANDPARENT_VALIDATION_PUZZLE) GRANDPARENT_VALIDATION_PUZZLE_HASH)
                (prefix
                    (list CREATE_COIN ACCUSED_PUZZLE_HASH AMOUNT)
                    (list CREATE_COIN_ANNOUNCEMENT 0)
                    (a GRANDPARENT_VALIDATION_PUZZLE (list AMOUNT MOVE SPLIT PARENT_VALIDATION_PUZZLE_HASH justification))
                )
            )
        )
        ; timeout
        (list 
            (list ASSERT_SECONDS_RELATIVE TIMEOUT) 
            (list CREATE_COIN ACCUSER_PUZZLE_HASH AMOUNT)
            (list CREATE_COIN_ANNOUNCEMENT 0)
        )
    )
)
