(
    (defun mergein (outer inner offset)
        (assign-inline first (+ (f inner) offset)
            (if (logand outer (<= (f outer) first))
                (c (f outer) (mergein (r outer) inner (+ offset 1)))
                (if (not (r inner))
                    (c first outer)
                    (c first (mergein outer (r inner) offset))
                )
            )
       )
    )
    (defun choose (numcards numchoose vals)
        (if (= numchoose 1)
            (assign (newvals card) (divmod vals numcards)
                (list (list card) newvals)
            )
            (assign 
                half (lsh numchoose -1)
                (newvals2 cards1) (choose half vals)
                (newvals3 cards2) (choose (- numcards half) newvals2)
                (list (mergein cards1 cards2 0) newvals3)
            )
        )
    )
)
