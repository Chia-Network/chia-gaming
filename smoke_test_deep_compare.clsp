(mod ()
  (include *standard-cl-21*)
  (include prepend.clinc)
  (include sort.clinc)
  (include assert.clinc)
  (include map.clinc)
  (include deep_compare.clinc)

   (map
     (lambda ((want_cmp_val cmp_a cmp_b))
       (assign
        (is_deep_lt is_deep_gt is_deep_eq is_deep_le is_deep_ge is_deep_ne)
        (list (deep< cmp_a cmp_b)
              (deep> cmp_a cmp_b)
              (deep= cmp_a cmp_b)
              (deep<= cmp_a cmp_b)
              (deep>= cmp_a cmp_b)
              (deep!= cmp_a cmp_b))
        deep_vals (list is_deep_lt is_deep_gt is_deep_eq is_deep_le is_deep_ge is_deep_ne)
           (assert
            (= (deep_compare cmp_a cmp_b) want_cmp_val)
            (if (= want_cmp_val -1) (deep= deep_vals (list 1 0 0 1 0 1)) 1)
            (if (= want_cmp_val  1) (deep= deep_vals (list 0 1 0 0 1 1)) 1)
            (if (= want_cmp_val  0) (deep= deep_vals (list 0 0 1 1 1 0)) 1)
            ()
            )
           )
       )
     (q
      (0 0 0)
      (1 "X" (1 2))
      (-1 (1 2) "X")
      (0 (3 2) (3 2))
      (-1 (3 1) (3 3))
      (1 (3 3) (3 1))
      (-1 (1 1) (2 1))
      (1 (3 1) (2 2))
      (-1 (2 2) (3 1))
      )
     )
   )
