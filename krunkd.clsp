
; Bob turn
; curried a list of possible next program hashes and a dictionary key
; state is a Alice commitment, Bob guess and Alice clue
; move is a Bob guess and number of remaining guesses
; evidence may be range of exclusion if Alice is showing Bob's word is invalid
(mod ((EHASHES DICTIONARY_KEY) ((bob_guess next_index) next_validation_hash mover_share previous_validation_hash 
    mover_puzzle_hash waiter_puzzle_hash amount timeout max_move_size referee_hash) 
    (alice_commit . move_list) me mover_puzzle solution (range_begin range_end))

    (defun index (myliist num)
        (if (not num)
            (f mylist)
            (index (r mylist) (- num 1))
        )
    )

    (if
        (all
            (= (len bob_guess) 5)
            (>= next_index 0)
            (<= next_index 4)
            (= next_validation_hash (sha256 (index EHASHES next_index) 
                (shatree (c alice_commit (c bob_guess move_list)))))
        )
        (assert
            (>= bob_guess range_begin)
            (<= bob_guess range_end)
            (list (list AGG_SIG_UNSAFE (sha256 range_begin range_end) DICTIONARY_KEY))
        )
        0
    )
)
