
; Alice turn
; curried a next program hash and bet amount
; state is an Alice commitment and series of Bob guesses and Alice clues with the 
; latest being a guess
; move is an Alice clue or word reveal if hit
; evidence can be index where clue is wrong
(mod ((NEXT_HASH BET_SIZE) (move next_validation_hash mover_share previous_validation_hash 
    mover_puzzle_hash waiter_puzzle_hash amount timeout max_move_size referee_hash) 
    (alice_commit . move_list) me mover_puzzle solution evidence)

    (defun myindex (mylist num)
        (if (not num)
            mylist
            (myindex (r (r mylist)) (- num 1))
        )
    )

    (if (= (len move) 37)
        (if 
            (all
                (= (substr move 0 5) (f move_list))
                (= (sha256 move) alice_commit)
                (= mover_share (* (div amount 200) (+ 100 BET_SIZE)))
            )
            (assert
                (assign 
                    (clue guess) (myindex move_list evidence)
                    (!= clue (make_clue (substr move 0 5) guess))
                )
                0
            )
            0
        )
        (assert
            (any
                (!= (len move) 1)
                (= move -14)
                (!= next_validation_hash (sha256 NEXT_HASH (shatree (c alice_commit (c move move_list)))))
            )
            0
        )
    )
)
