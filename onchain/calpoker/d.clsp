(include *standard-cl-23*)

(import qualified onchain.calpoker.e as pokere)
(import std.assert)
(import std.shatree)

; Alice challenging
; state is the cards for both players and alice's card pick commitment
; move is Bob's picks
; evidence is empty
(export (mod_hash (bob_picks new_validation_hash max_move_size mover_share previous_validation_hash 
    mover_puzzle_hash waiter_puzzle_hash amount timeout max_move_size referee_hash) 
    (cards alice_commit) me mover_puzzle solution evidence)
    (assert
        (not
            (all
                (= (strlen bob_picks) 1)
                (= (onecount bob_picks) 4)
                (= new_validation_hash (sha256 pokere.program_hash (shatree (list bob_picks cards alice_commit))))
                (= max_move_size 18)
            )
        )
        0
    )
)

(defun onecount (mymask)
    (if mymask
        (+ (logand mymask 1) (onecount (lsh mymask -1)))
        0
    )
)
