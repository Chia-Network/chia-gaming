(mod ((ALICE_COMMIT BOB_SEED) total (alice_seed alice_commit) bob_share new_validation justification)

    (include *standard-cl-22*)
    (include assert.clinc)
    (include curry.clinc)
    (include shatree.clinc)
    (compile-file calpokerd calpokerd.clsp)
    (defconst dhash (shatree calpokerd))

    (defun insert_card (card sorted_inner)
        (if (not sorted_inner)
            (list card (c card 0))
            (if (< card (f sorted_inner))
                (list card (c card sorted_inner))
                (assign (new_card next_inner) (insert_card (+ 1 card) (r sorted_inner))
                    (list new_card (c (f sorted_inner) next_inner))
                )
            )
        )
    )
    (defun make_cards_inner (seed next_mod)
        (assign (inner_sorted inner_unsorted) 
            (if (= next_mod 52) 
                (0 0)
                (make_cards_inner (sha256 seed) (+ 1 next_mod))
            )
            (next_card new_inner) (insert_card (% seed next_mod) inner_sorted)
            (list new_inner (c next_card inner_unsorted))
        )
    )
    (defun make_cards (seed)
        (assign 
            (inner_sorted inner_unsorted) (make_cards_inner seed (- 52 16))
            inner_unsorted
        )
    )
    (assert
        (= (len alice_seed) 16)
        (= (sha256 alice_seed) ALICE_COMMIT)
        (= (len alice_commit) 32)
        (= new_validation (curry_hashes dhash (shatree (list (make_cards (sha256 alice_seed BOB_SEED)) alice_commit))))
        (not bob_share)
        0
    )
)
