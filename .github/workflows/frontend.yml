name: Frontend

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}--${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/long_lived/')) && github.sha || '' }}
  cancel-in-progress: true

on:
  push:
    branches:
      - base
      - dev
  release:
    types: [published]
  pull_request:
    branches:
      - '**'

permissions:
  id-token: write
  contents: read

jobs:
  # All steps that were previously in 'build' now happen inside the docker container in build-test.
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Job Env
        uses: Chia-Network/actions/setjobenv@main
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.1
      - name: Install latest rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
            target: wasm32-unknown-unknown
            components: rustfmt
      - name: Install wasm-pack
        run: |
          cargo install --version 0.13.1 wasm-pack

      - name: Smoke test docker image
        run: |
          set -e -x

          mv Dockerfile Dockerfile.non-ci
          sed -e 's/#CI //g' < Dockerfile.non-ci > Dockerfile
          docker build --platform linux/amd64 --progress=plain -t chia-gaming-test . # TODO: Replace this line with ./build-docker-images.sh
          docker run --name chia-gaming-test --network=host -t chia-gaming-test &
          cd resources/fe-test
          ./wait-for-it.sh localhost:5800
          # The wc-stub now runs a block update service which mimics coinset.org
          # We can't predict what block number it'll be.
          curl -d '' http://localhost:5800/wait_block | grep -E '[0-9]+'
          docker kill chia-gaming-test

      - name: Run headless test
        env:
          DETECT_CHROMEDRIVER_VERSION: "true"
          FIREFOX_HEADLESS: "true"
        run: |
          (cd resources/gaming-fe &&
              yarn install &&
              yarn run build) &&
          sudo apt update
          sudo apt-get install -qy xvfb libnss3-dev libatk1.0-0 libatk-bridge2.0-0 libgtk-3-0 libgbm-dev libasound2t64
          (cd resources/fe-test && xvfb-run -a ./test.sh)

      - name: Cleanup xvfb pidx
        run: |
          xvfb_pids="$(pgrep tmp/xvfb-run | grep -v grep | awk '{print $2}')"
          if [ "$xvfb_pids" != "" ]; then
              echo "Killing the following xvfb processes: $xvfb_pids"
              sudo kill "$xvfb_pids"
          else
              echo "No xvfb processes to kill"
          fi
