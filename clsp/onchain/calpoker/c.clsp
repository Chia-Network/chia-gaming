(include *standard-cl-23*)

(import std.assert)
(import std.shatree)
(import std.relops)
(import std.and)
(import std.if_any_fail)
(import std.print)
(import onchain.calpoker.d exposing (program_hash as dhash))
(import onchain.calpoker.make_cards)

; Bob challenging
; state is alice's commit and bob's seed
; move is alice's reveal of her card generating seed and her commit to which cards she's picking
; evidence is empty
(export (@ all_args (mod_hash (move new_validation_hash mover_share previous_validation_hash
    mover_puzzle_hash waiter_puzzle_hash amount timeout max_move_size referee_hash)
    (alice_commit bob_seed) me previous_calidation_program mover_puzzle solution evidence))
    (if_any_fail
        (print "check c" (= (strlen move) 48))
        (= (sha256 (substr move 0 16)) alice_commit)
        (= new_validation_hash (sha256 dhash (shatree (list (make_cards
            (sha256 (substr move 0 16) bob_seed amount)) (substr move 16 48)))))
        (= max_move_size 1)
        0
        (x)
    )
)
