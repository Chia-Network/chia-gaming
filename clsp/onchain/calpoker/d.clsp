(include *standard-cl-23*)

(import onchain.calpoker.e exposing (program_hash as ehash))
(import onchain.game_codes)
(import std.assert)
(import std.shatree)
(import std.popcount)
(import std.and)
(import std.li)
(import std.if_any_fail)

; Alice challenging
; state is the cards for both players and alice's card pick commitment
; move is Bob's picks
; evidence is empty
(export (mod_hash (mover_puzzle_hash waiter_puzzle_hash timeout amount previous_validation_hash nonce_unused bob_picks max_move_size new_validation_hash mover_share 
    referee_hash)
    (cards alice_commit) me previous_validation_program mover_puzzle solution evidence)
    (if_any_fail
        (= (strlen bob_picks) 1)
        (= (popcount bob_picks) 4)
        (li SLASH 0)
        (li MAKE_MOVE ehash (list bob_picks cards alice_commit) 18)
    )
)
