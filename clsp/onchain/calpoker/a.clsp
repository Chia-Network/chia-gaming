(include *standard-cl-23*)

(import onchain.calpoker.b exposing (program_hash as bhash))
(import onchain.game_codes)
(import std.assert)
(import std.and)
(import std.li)
(import std.if_any_fail)
(import std.relops)

; Bob challenging
; state is empty
; move is alice commit to a salted word
; evidence is empty
; ME below is the object whose hash is mod_hash
(export (mod_hash (mover_puzzle_hash waiter_puzzle_hash timeout amount previous_validation_hash nonce_unused move max_move_size new_validation_hash mover_share
    referee_hash)
    state me previous_validation_program mover_puzzle solution evidence)

    (if (!= (strlen move) 32)
        (li SLASH 0)
        ; next validation hash, next validation state, max move size, mover share
        (li MAKE_MOVE bhash move 16)
    )
)
