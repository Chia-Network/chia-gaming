(include *standard-cl-23*)

(export guess_validate)
(import onchain.krunk.clue exposing clue_validate_hash)
(import onchain.game_codes)
(import std.assert)
(import std.li)
(import std.relops)
(import std.condition_codes)

; Alice challenging
; state is a (bob_guesses alice_clues dictionary_public_key alice_commit)
; move is a Bob guess
; evidence may be range of exclusion if Alice is showing Bob's word is invalid
(defun guess_validate (mod_hash (move new_validation_hash mover_share previous_validation_hash
    mover_puzzle_hash waiter_puzzle_hash amount timeout max_move_size referee_hash)
    (bob_guesses alice_clues @ tail (dictionary_public_key alice_commit)) me
    previous_validation_program mover_puzzle solution evidence)

    (if evidence
        (assert
            (>=s move (substr evidence 0 5))
            (<=s move (substr evidence 5 10))
            (li SLASH (list (list AGG_SIG_UNSAFE evidence dictionary_public_key)))
        )
        (if (!= (strlen move) 5)
            (li SLASH 0)
            (li MAKE_MOVE clue_validate_hash (li (c move bob_guesses) alice_clues mod_hash &rest tail) 21)
        )
    )
)
