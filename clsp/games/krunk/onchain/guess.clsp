(include *standard-cl-23*)

(export guess)
(import onchain.krunk.clue exposing clue_validate_hash)
(import std.assert)

; Alice challenging
; state is a (bob_guesses alice_clues dictionary_public_key alice_commit)
; move is a Bob guess
; evidence may be range of exclusion if Alice is showing Bob's word is invalid
(defun guess_validate (mod_hash
    (MOVER_PUZZLE_HASH WAITER_PUZZLE_HASH TIMEOUT AMOUNT MOD_HASH NONCE
        MOVE MAX_MOVE_SIZE VALIDATION_INFO_HASH MOVER_SHARE PREVIOUS_VALIDATION_INFO_HASH)
        (bob_guesses alice_clues . (@ tail (dictionary_public_key alice_commit))) previous_validation_program mover_puzzle solution evidence)

    (if evidence
        (assert
            (>=s move (substr evidence 0 5))
            (<=s move (substr evidence 5 10))
            (list SLASH (list AGG_SIG_UNSAFE evidence dictionary_public_key))
        )
        (if_any_fail
            (= (strlen MOVE) 5)
            (li SLASH 0)
            (li MAKE_MOVE clue_validate_hash (li (c move bob_guesses) alice_clues mod_hash &rest tail) 21)
        )
    )
)
