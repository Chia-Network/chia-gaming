
(mod ()
    (include *standard-cl-21*)
    (include print.clinc)
    (include sort.clinc)
    (include assert.clinc)
    (include deep_compare.clinc)
    (include reverse.clinc)
    (include prepend.clinc)
    (include map.clinc)
    (include range.clinc)
    (include permutations.clinc)
    (include last.clinc)
    (include busy.clinc)

    (defun try_list (mylist newlist)
        (assert (deep= (print "sorted" (sort (lambda (A B) (deep< A B)) newlist)) mylist) 0)
    )

    (defun try_permuted_list (mylist)
        (busy (lambda ((& mylist) newlist) (try_list mylist newlist))
            (print "sort all these" (permutations (print "mylist" mylist)))
            0
        )
    )
    (last
        (try_list 0 0)
        (try_list (range 15) (range 15))
        (try_list (range 15) (reverse (range 15)))
        (try_permuted_list (list -1 -1 0 0 2))
        (busy (lambda (i) (try_permuted_list (print "sortme" (range i))))
            (range 4)
            0
        )
        1
    )
)
