(include *standard-cl-23*)
<<<<<<< HEAD:clsp/test/test_handcalc_micro-v1.clsp
(import prepend_count)
(import handcalc)
(import onchain.calpoker.make_cards)
(import onchain.calpoker.onehandcalc)
(import onchain.calpoker.arrange_cards)
=======
(import util.prepend_count)
(import games.calpoker-v0.handcalc)
>>>>>>> main:clsp/test/test_handcalc_micro.clsp

(export (kind . arguments)
  (if
     (= kind "prepend_count")
     (prepend_count &rest arguments)

     (= kind "pull_indices")
     (pull_indices &rest arguments)

     (= kind "pull_out_straight")
     (pull_out_straight &rest arguments)

     (= kind "find_straight_high")
     (find_straight_high &rest arguments)

     (= kind "straight_indices")
     (straight_indices &rest arguments)

     (= kind "pull_suit")
     (pull_suit &rest arguments)

     (= kind "onehandcalc")
     (onehandcalc &rest arguments)

     (= kind "make_cards")
     (make_cards &rest arguments)

     (= kind "pull_out_cards")
     (pull_out_cards &rest arguments)

     (= kind "split_cards")
     (split_cards &rest arguments)

     (= kind "get_final_cards_in_canonical_order")
     (get_final_cards_in_canonical_order &rest arguments)

     (= kind "handcalc")
     (handcalc &rest arguments)

     ;; Otherwise
     (x "Couldn't find entrypoint: " kind)
     )
  )
