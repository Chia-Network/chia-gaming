(include *standard-cl-23*)
(import std.print)
(import std.assert)
(import std.deep_compare)
(import std.reverse)
(import std.prepend)
(import std.map)
(import std.range)
(import std.permutations)
(import std.last)
(import std.busy)
(import games.calpoker-v0.onchain.onehandcalc exposing atomsort)

(defun try_list (mylist newlist)
    (assert (deep= (print 'result' (atomsort (print 'about to sort' newlist))) mylist) 0)
)

(defun try_permuted_list (mylist)
    (busy (lambda ((& mylist) newlist) (try_list (reverse mylist) newlist))
        (permutations mylist)
        0
    )
)

(export ()
    (last
        (try_list 0 0)
        (try_list (reverse (range 15)) (range 15))
        (try_list (reverse (range 15)) (reverse (range 15)))
        (try_permuted_list (list -1 -1 0 0 2))
        (busy (lambda (i) (try_permuted_list (range i)))
            (range 4)
            0
        )
        1
    )
)
