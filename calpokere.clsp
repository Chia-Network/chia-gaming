(mod ((((alice_salted_picks alice_hand_type) new_validation_hash alice_share junk1 junk2 total)
        (BOB_PICKS (ALICE_CARDS BOB_CARDS) ALICE_COMMIT) bob_hand_type) conditions)

    (include *standard-cl-22*)
    (include assert.clinc)
    (include shatree.clinc)
    (include onehandcalc.clinc)
    (include map.clinc)

    (defun onecount (mymask)
        (if mymask
            (+ (& mymask 1) (onecount (lsh mymask -1)))
            0
        )
    )
    (defun extract_cards (mask (firstcard restcards) leftcards rightcards)
        (if (not cards)
            (list leftcards rightcards)
            (if (logand mask 1)
                (extract_cards (lsh mask -1) restcards leftcards (c firstcard rightcards))
                (extract_cards (lsh mask -1) restcards (c firstcard leftcards) rightcards)
            )
        )
    )
    (defun make_card (val)
        (assign
            (rank suit) (divmod val 4)
            (list (+ 2 rank) (+ 1 suit))
        )
    )
    (assign
        alice_picks (substr alice_salted_picks 0 1)
        (alice_cards bob_cards) (extract_cards BOB_PICKS BOB_CARDS &rest (extract_cards alice_picks ALICE_CARDS 0 0))
        (result (hand_compare (onehandcalc alice_hand_type (map make_card alice_cards)) 
            (onehandcalc bob_hand_type (map make_card bob_cards))))
        (assert
            (not
                (all
                    (not new_validation_hash)
                    (= (len alice_salted_picks) 17)
                    (= (sha256 alice_salted_picks ALICE_COMMIT))
                    (= (onecount alice_picks) 4)
                    (<= alice_share
                        (if (not result)
                            (/ total 2)
                            (if (= result 1)
                                0
                                total
                            )
                        )
                    )
                )
            )
            conditions
        )
    )
)
