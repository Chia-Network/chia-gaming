
(mod (myless mylist)
    (defun split_inner (@ everything (rest aggl aggr))
        (if rest
            (split_inner (r rest) aggr (c (f rest) aggl))
            (r everything)
        )
    )
    (defun split (mylist)
        (split_inner mylist 0 0)
    )
    (defun prepend (a b)
        (if a
            (c (f a) (prepend (r a) b))
            b
        )
    )
    (defun merge_inner (myless a b agg)
        (if (not a)
            (prepend b agg)
            (if (not b)
                (prepend a agg)
                (if (a myless (list (f a) (f b)))
                    (merge_inner myless (r a) b (c (f a) agg))
                    (merge_inner myless a (r b) (c (f b) agg))
                )
            )
        )
    )
    (defun merge (myless a b)
        (merge_inner myless a b 0)
    )
    (defun sort (myless mylist)
        (assign (a b) (split mylist)
            sa (sort myless a)
            sb (sort myless b)
            (merge sa sb)
        )
    )
    (sort myless mylist)
)
